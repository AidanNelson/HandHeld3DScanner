diff --git a/CMakeLists.txt b/CMakeLists.txt
index c560e367f..e11d737ef 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -37,6 +37,8 @@ os_set_flags()
 # macro definition located at "CMake/global_config.cmake"
 global_set_flags()
 
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -latomic")
+
 if(BUILD_SHARED_LIBS)
     add_library(${LRS_TARGET} SHARED "")
 else()
diff --git a/examples/pointcloud/rs-pointcloud.cpp b/examples/pointcloud/rs-pointcloud.cpp
index bd31199bd..f88fc79d0 100644
--- a/examples/pointcloud/rs-pointcloud.cpp
+++ b/examples/pointcloud/rs-pointcloud.cpp
@@ -25,8 +25,18 @@ int main(int argc, char * argv[]) try
 
     // Declare RealSense pipeline, encapsulating the actual device and sensors
     rs2::pipeline pipe;
-    // Start streaming with default recommended configuration
-    pipe.start();
+
+    if (argc <= 0) {
+        // Start streaming with default recommended configuration
+        pipe.start();
+    }
+    else {
+        // Declare a config that records to a file
+        rs2::config cfg;
+        cfg.enable_record_to_file(argv[0]);
+        // Start streaming with default configuration, but records to a file
+        pipe.start(cfg);
+    }
 
     while (app) // Application still alive?
     {
diff --git a/scripts/setup_udev_rules.sh b/scripts/setup_udev_rules.sh
index 03af41c25..115020598 100755
--- a/scripts/setup_udev_rules.sh
+++ b/scripts/setup_udev_rules.sh
@@ -7,14 +7,16 @@ exec 2> /dev/null
 con_dev=$(ls /dev/video* | wc -l)
 exec 2>&3
 
-if [ $con_dev -ne 0 ];
-then
-	echo -e "\e[32m"
-	read -p "Remove all RealSense cameras attached. Hit any key when ready"
-	echo -e "\e[0m"
+if [ $con_dev -ne 0 ]; then
+	while [ ! -z "$(lsusb | grep -E '(8086:0abf)|(8086:0acb)|(8086:0ad0)|(8086:04b4)|(8086:0ad1)|(8086:0ad2)|(8086:0ad3)|(8086:0ad4)|(8086:0ad5)|(8086:0ad6)|(8086:0af2)|(8086:0af6)|(8086:0afe)|(8086:0aff)|(8086:0b00)|(8086:0b01)|(8086:0b03)|(8086:0b07)|(8086:0b0c)|(8086:0b0d)|(8086:0b3a)|(8086:0b3d)|(8086:0b48)|(8086:0b49)|(8086:0b4b)|(8086:0b4d)|(8086:0ab3)|(8086:0adb)|(8086:0b55)|(8087:0af3)|(8087:0b37)|(03e7:2150)')" ] ;
+	do
+		echo -e "\e[32m"
+		read -p "Remove all RealSense cameras attached. Hit ENTER key when ready"
+		echo -e "\e[0m"
+	done
 fi
 
 sudo cp config/99-realsense-libusb.rules /etc/udev/rules.d/
-sudo udevadm control --reload-rules && udevadm trigger
+sudo udevadm control --reload-rules && sudo udevadm trigger
 
 echo "udev-rules successfully installed"
diff --git a/src/libusb/messenger-libusb.cpp b/src/libusb/messenger-libusb.cpp
index 0ef9e0bd0..24f25fe85 100644
--- a/src/libusb/messenger-libusb.cpp
+++ b/src/libusb/messenger-libusb.cpp
@@ -88,6 +88,20 @@ namespace librealsense
             auto h = dh.get_handle();
             int actual_length = 0;
             auto sts = libusb_bulk_transfer(h, endpoint->get_address(), buffer, length, &actual_length, timeout_ms);
+            if(sts < 0 && intf_claimed == 0)
+            {
+                auto intf_sts = libusb_claim_interface(h, endpoint->get_interface_number());
+                if (intf_sts < 0)
+                {
+                    intf_claimed = 1;
+                    sts = libusb_bulk_transfer(h, endpoint->get_address(), buffer, length, &actual_length, timeout_ms);
+                }
+                else
+                {
+                    std::string strerr = strerror(errno);
+                    LOG_WARNING("libusb_claim_interface returned error [sts " << (int)intf_sts << "], interface: " << (int)endpoint->get_interface_number() << ", error: " << strerr << ", errno: " << (int)errno);
+                }
+            }
             if(sts < 0)
             {
                 std::string strerr = strerror(errno);
diff --git a/src/libusb/messenger-libusb.h b/src/libusb/messenger-libusb.h
index a8afb84e4..0a6455171 100644
--- a/src/libusb/messenger-libusb.h
+++ b/src/libusb/messenger-libusb.h
@@ -35,6 +35,7 @@ namespace librealsense
         private:
             const std::shared_ptr<usb_device_libusb> _device;
             std::shared_ptr<usb_interface_libusb> get_interface(int number);
+            char intf_claimed = 0;
         };
     }
 }
diff --git a/src/sensor.cpp b/src/sensor.cpp
index 408afcd3d..b12998c54 100644
--- a/src/sensor.cpp
+++ b/src/sensor.cpp
@@ -531,7 +531,7 @@ namespace librealsense
                     }
 
                     // Unpack the frame
-                    if (requires_processing && (dest.size() > 0))
+                    if (requires_processing && (dest.size() > 0) && f.frame_size >= (mode.profile.width * mode.profile.height))
                     {
                         unpacker.unpack(dest.data(), reinterpret_cast<const byte *>(f.pixels), mode.profile.width, mode.profile.height, f.frame_size);
                     }
