diff --git a/CMakeLists.txt b/CMakeLists.txt
index c560e367f..bc2a76397 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -25,6 +25,8 @@ include(CMake/global_config.cmake)
 
 config_cxx_flags()
 
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -latomic")
+
 # include os specific macros
 # macro definition located at "CMake/global_config.cmake"
 include(CMake/include_os.cmake)
diff --git a/scripts/setup_udev_rules.sh b/scripts/setup_udev_rules.sh
index 03af41c25..d343561b0 100755
--- a/scripts/setup_udev_rules.sh
+++ b/scripts/setup_udev_rules.sh
@@ -10,11 +10,11 @@ exec 2>&3
 if [ $con_dev -ne 0 ];
 then
 	echo -e "\e[32m"
-	read -p "Remove all RealSense cameras attached. Hit any key when ready"
+	read -p "Remove all RealSense cameras attached. Hit enter key when ready"
 	echo -e "\e[0m"
 fi
 
 sudo cp config/99-realsense-libusb.rules /etc/udev/rules.d/
-sudo udevadm control --reload-rules && udevadm trigger
+sudo udevadm control --reload-rules && sudo udevadm trigger
 
 echo "udev-rules successfully installed"
diff --git a/src/libusb/messenger-libusb.cpp b/src/libusb/messenger-libusb.cpp
index 0ef9e0bd0..701270485 100644
--- a/src/libusb/messenger-libusb.cpp
+++ b/src/libusb/messenger-libusb.cpp
@@ -88,6 +88,20 @@ namespace librealsense
             auto h = dh.get_handle();
             int actual_length = 0;
             auto sts = libusb_bulk_transfer(h, endpoint->get_address(), buffer, length, &actual_length, timeout_ms);
+            if(sts < 0 && intf_claimed == 0)
+            {
+                auto intf_sts = libusb_claim_interface(h, endpoint->get_interface_number());
+                if (intf_sts < 0)
+                {
+                    intf_claimed = 1;
+                    sts = libusb_bulk_transfer(h, endpoint->get_address(), buffer, length, &actual_length, timeout_ms);
+                }
+                else
+                {
+                    std::string strerr = strerror(errno);
+                    LOG_WARNING("libusb_claim_interface returned error, interface: " << (int)endpoint->get_interface_number() << ", error: " << strerr << ", number: " << (int)errno);
+                }
+            }
             if(sts < 0)
             {
                 std::string strerr = strerror(errno);
diff --git a/src/libusb/messenger-libusb.h b/src/libusb/messenger-libusb.h
index a8afb84e4..0a6455171 100644
--- a/src/libusb/messenger-libusb.h
+++ b/src/libusb/messenger-libusb.h
@@ -35,6 +35,7 @@ namespace librealsense
         private:
             const std::shared_ptr<usb_device_libusb> _device;
             std::shared_ptr<usb_interface_libusb> get_interface(int number);
+            char intf_claimed = 0;
         };
     }
 }
